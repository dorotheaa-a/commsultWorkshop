{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abigail/OneDrive/Documents/commsult/guided/test-app/src/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\n\r\nconst authHandler = NextAuth({\r\n    providers: [\r\n        CredentialsProvider({\r\n            name: \"Credentials\",\r\n            credentials:{\r\n                email:{label:\"email\", type:\"text\"},\r\n                password:{label:\"password\", type:\"password\"}\r\n            },\r\n            async authorize(credentials) {\r\n                try {\r\n                    const {email, password} = credentials\r\n                    if(email === \"demo@example.com\" && password === \"password\"){\r\n                        return {id: 1, name: \"demo user\"}\r\n                    }\r\n                } catch (e) {\r\n                    return null\r\n                }\r\n            }\r\n        })\r\n    ],\r\n    pages:{\r\n        signIn: '/login'\r\n    },\r\n    \r\n})\r\n\r\nexport {authHandler as GET, authHandler as POST};"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,cAAc,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACzB,WAAW;QACP,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAChB,MAAM;YACN,aAAY;gBACR,OAAM;oBAAC,OAAM;oBAAS,MAAK;gBAAM;gBACjC,UAAS;oBAAC,OAAM;oBAAY,MAAK;gBAAU;YAC/C;YACA,MAAM,WAAU,WAAW;gBACvB,IAAI;oBACA,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAC,GAAG;oBAC1B,IAAG,UAAU,sBAAsB,aAAa,YAAW;wBACvD,OAAO;4BAAC,IAAI;4BAAG,MAAM;wBAAW;oBACpC;gBACJ,EAAE,OAAO,GAAG;oBACR,OAAO;gBACX;YACJ;QACJ;KACH;IACD,OAAM;QACF,QAAQ;IACZ;AAEJ","debugId":null}}]
}